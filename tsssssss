EnablePrimaryMouseButtonEvents(true)

local mode_switch_key_state = false

local current_weapon = "none"

-- Key binds
local ump9_key = 3
local akm_key = 5
local m16a4_key = 4
local m416_key = nil
local scarl_key = nil
local uzi_key = nil


local full_mode = true
local all_recoil_times = 1.0
local vertical_sensitivity = 1.0  -- You may want to adjust based on in-game settings


local set_off_key = 4

-- Fire key
local fire_key = 1  -- Assuming the left mouse button is the fire key
local mode_switch_key = "numlock"
 local full_mode_key = "capslock"   ---numlock lamp on,recoil is full_mode."numlock" 
local hold_breath_key = "lshift"
 local control_key = "lctrl" 
local right_click = 2
local is_r_pressed = false

-- Ignore key
local ignore_key = "lalt"

-- Sensitivity in Game
local target_sensitivity = 50
local scope_sensitivity = 50
local scope4x_sensitivity = 50

-- Obfs setting
local weapon_speed_mode = true
local obfs_mode = false
local interval_ratio = 1
local random_seed = 1

local recoil_table = {}

recoil_table["ump9"] = {
    basic={18,19,18,19,18,19,19,21,23,24,23,24,23,24,23,24,23,24,23,24,23,24,24,25,24,25,24,25,24,25,24,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26},
    full={40,41,40,42,43,45,44,47,49,50,52,54,55,57,58,60,62,64,65,67,69,71,72,73,74,75,76,77,79,81,82,83,85,86,87,89,90,91,93,94},
    fullof4x={90,91,92,93,94,96,97,98,99,100,102,104,106,108,109,111,113,115,117,119,121,123,125,127,129,130,132,134,136,138,139,141,143,145,147,149,151,153,155,157},
    quadruple={83,13,13,83,83,83,83,116,116,116,116,93,93,93,93,93,93,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3},
    speed = 12
}

recoil_table["akm"] = {
    basic={18,19,18,19,18,19,19,21,23,24,23,24,23,24,23,24,23,24,23,24,23,24,24,25,24,25,24,25,24,25,24,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26},
    	basictimes = 5,
	basictimes1 = 10,
     full={40,41,40,42,43,45,44,47,49,50,52,54,55,57,58,60,62,64,65,67,69,71,72,73,74,75,76,77,79,81,82,83,85,86,87,89,90,91,93,94},
         fulltimes = 1,
    fulltimes1 = 1,
    fullof4x={90,91,92,93,94,96,97,98,99,100,102,104,106,108,109,111,113,115,117,119,121,123,125,127,129,130,132,134,136,138,139,141,143,145,147,149,151,153,155,157},
        fullof4xtimes = 4,
    quadruple={66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,66.7,123.3,123.3,123.3,123.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3,93.3},
        quadrupletimes = 4,
      maxbullets = 40,
    holdbreathtimes = 8,
    fullholdbreathtimes = 1.38,
        speed = 100

}

recoil_table["m16a4"] = {
    basic={25,25,25,29,33,33,32,33,32,32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
    quadruple={86.7,86.7,86.7,86.7,86.7,86.7,86.7,150,150,150,150,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120},
    speed = 75
}

recoil_table["m416"] = {
    basic={21,21,21,21,21,21,21,21,21,23,23,24,23,24,25,25,26,27,27,32,31,31,31,31,31,31,31,32,32,32,35,35,35,35,35,35,35,35,35,35,35},
     full={40,41,40,42,43,45,44,47,49,50,52,54,55,57,58,60,62,64,65,67,69,71,72,73,74,75,76,77,79,81,82,83,85,86,87,89,90,91,93,94},
    fullof4x={90,91,92,93,94,96,97,98,99,100,102,104,106,108,109,111,113,115,117,119,121,123,125,127,129,130,132,134,136,138,139,141,143,145,147,149,151,153,155,157},
    quadruple={86.7,86.7,86.7,86.7,86.7,86.7,86.7,150,150,150,150,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7},
    speed = 86
}

recoil_table["scarl"] = {
    basic={20,21,22,21,22,22,23,22,23,23,24,24,25,25,25,25,26,27,28,29,30,32,34,34,35,34,35,34,35,34,35,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35},
     full={40,41,40,42,43,45,44,47,49,50,52,54,55,57,58,60,62,64,65,67,69,71,72,73,74,75,76,77,79,81,82,83,85,86,87,89,90,91,93,94},
    fullof4x={90,91,92,93,94,96,97,98,99,100,102,104,106,108,109,111,113,115,117,119,121,123,125,127,129,130,132,134,136,138,139,141,143,145,147,149,151,153,155,157},
    quadruple={86.7,86.7,86.7,86.7,86.7,86.7,86.7,150,150,150,150,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7,96.7},
    speed = 96
}

recoil_table["uzi"] = {
    basic={16,17,18,20,21,22,23,24,25,26,28,30,32,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34},
     full={40,41,40,42,43,45,44,47,49,50,52,54,55,57,58,60,62,64,65,67,69,71,72,73,74,75,76,77,79,81,82,83,85,86,87,89,90,91,93,94},
    fullof4x={90,91,92,93,94,96,97,98,99,100,102,104,106,108,109,111,113,115,117,119,121,123,125,127,129,130,132,134,136,138,139,141,143,145,147,149,151,153,155,157},
    quadruple={13.3,13.3,13.3,13.3,13.3,21.7,21.7,21.7,21.7,21.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7,46.7},
    speed = 48
}

recoil_table["none"] = {
    basic={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    quadruple={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    speed = 0
}

 function recoil_mode()
    local mode = "basic"  -- Default mode

    if IsKeyLockOn(mode_switch_key) then
        if IsKeyLockOn(full_mode_key) and full_mode then
            mode = "fullof4x"
        else
            mode = "quadruple"
        end
    else
        if IsKeyLockOn(full_mode_key) and full_mode then
            mode = "full"
        end
    end


    OutputLogMessage("Recoil mode: %s\n", mode)

    return mode
end
 function single_value(value)
    return 10 * math.floor(( value / 10 ) + 0.9)
    end

function recoil_value(_weapon,_duration)
    OutputLogMessage("recoil_value called with weapon: %s, duration: %f\n", _weapon, _duration)
    OutputLogMessage("Recoil mode: %s\n", _mode)

  local _mode = recoil_mode()
 local step = (math.floor(_duration/recoil_table[_weapon]["speed"])) + 1
        OutputLogMessage("Step: %d\n", step)

    if step > #recoil_table[_weapon][_mode] then
        step = #recoil_table[_weapon][_mode]
    end
    local weapon_recoil = recoil_table[_weapon][_mode][step]
        OutputLogMessage("Weapon recoil: %f\n", weapon_recoil)

    local weapon_speed = recoil_table[_weapon]["speed"]
    local weapon_clickspeed = recoil_table[_weapon]["clickspeed"]
    local weapon_maxbullets = recoil_table[_weapon]["maxbullets"]
    local weapon_basictimes = recoil_table[_weapon]["basictimes"]
    local weapon_basictimes1 = recoil_table[_weapon]["basictimes1"]
    local weapon_fulltimes = recoil_table[_weapon]["fulltimes"]
    local weapon_fulltimes1 = recoil_table[_weapon]["fulltimes1"]
    local weapon_quadrupletimes = recoil_table[_weapon]["quadrupletimes"]
    local weapon_fullof4xtimes = recoil_table[_weapon]["fullof4xtimes"]
    local weapon_holdbreathtimes = recoil_table[_weapon]["holdbreathtimes"]
    local weapon_fullofholdbreathtimes = recoil_table[_weapon]["fullholdbreathtimes"]
    local weapon_intervals = weapon_speed    
    local weapon_clicktime = weapon_clickspeed
    local weapon_bullets = weapon_maxbullets 

recoil_recovery = weapon_recoil
    recoil_times = all_recoil_times * 1 / vertical_sensitivity 

 if recoil_mode() == "basic" and not IsModifierPressed(hold_breath_key) and not IsModifierPressed(control_key) then
        recoil_recovery = recoil_recovery * recoil_times * weapon_basictimes
    elseif recoil_mode() == "basic" and not IsModifierPressed(hold_breath_key) and IsModifierPressed(control_key) then
        recoil_recovery = recoil_recovery * recoil_times * weapon_basictimes1
    end

    if recoil_mode() == "basic" and IsModifierPressed(hold_breath_key) and is_r_pressed then
        recoil_recovery = recoil_recovery * weapon_holdbreathtimes * recoil_times * weapon_basictimes
    elseif recoil_mode() == "basic" and IsModifierPressed(hold_breath_key) and not is_r_pressed then
        recoil_recovery = recoil_recovery * recoil_times * weapon_basictimes
    end

    if recoil_mode() == "full" and not IsModifierPressed(hold_breath_key) and not IsModifierPressed(control_key) then
        recoil_recovery = recoil_recovery * recoil_times * weapon_fulltimes 
    elseif recoil_mode() == "full" and not IsModifierPressed(hold_breath_key) and IsModifierPressed(control_key) then
        recoil_recovery = recoil_recovery * recoil_times * weapon_fulltimes1
    end

    if recoil_mode() == "full" and IsModifierPressed(hold_breath_key) and is_r_pressed then
        recoil_recovery = recoil_recovery * weapon_fullofholdbreathtimes * recoil_times * weapon_fulltimes 
    elseif recoil_mode() == "full" and IsModifierPressed(hold_breath_key) and not is_r_pressed then
        recoil_recovery = recoil_recovery * recoil_times * weapon_fulltimes
    end

    if recoil_mode() == "quadruple" then
        recoil_recovery = recoil_recovery * recoil_times * weapon_quadrupletimes
    end
    
    if recoil_mode() == "fullof4x" then
        recoil_recovery = recoil_recovery * recoil_times * weapon_fullof4xtimes
    end
end

local function shoot()
    local weapon = recoil_table[current_weapon]
    if not weapon then 
        OutputLogMessage("No weapon selected\n")
        return 
    end

    OutputLogMessage("Shooting with weapon: %s\n", current_weapon)

    -- Get the recoil mode and pattern
    local mode = recoil_mode()
    local recoil_pattern = weapon[mode]

    -- Continuous shooting and cursor movement while left mouse button is pressed
    local index = 1
    while IsMouseButtonPressed(1) and index <= #recoil_pattern do
        MoveMouseRelative(0, recoil_pattern[index])
        Sleep(weapon.speed) -- use weapon's actual speed
        index = index + 1
    end
    
    OutputLogMessage("Shooting completed\n")
end


local function set_weapon(weapon_name)
    current_weapon = weapon_name
    OutputLogMessage("Current weapon set to: %s\n", current_weapon)
end

function OnEvent(event, arg)
    OutputLogMessage("Event: %s, Arg: %d\n", event, arg)
    
    if event == "MOUSE_BUTTON_PRESSED" then
    if arg == ump9_key then set_weapon("ump9")
        elseif arg == akm_key then set_weapon("akm")
        elseif arg == m16a4_key then set_weapon("m16a4")
        elseif arg == m416_key then set_weapon("m416")
        elseif arg == scarl_key then set_weapon("scarl")
        elseif arg == uzi_key then set_weapon("uzi")
        elseif arg == set_off_key then set_weapon("none")
        elseif arg == fire_key and not IsModifierPressed(ignore_key) 
         then
            shoot()
        end
    elseif event == "MOUSE_BUTTON_RELEASED" then
        if arg == mode_switch_key then
            mode_switch_key_state = false
                    OutputLogMessage("Mode switch key released\n")

        end
    elseif event == "G_PRESSED" then
        if arg == mode_switch_key then
            mode_switch_key_state = true
                    OutputLogMessage("Mode switch key pressed\n")

        end
    end
end
